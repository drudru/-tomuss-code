Dans chaque partie, les choses à faire sont triées par priorité.

==========================
Nouvelles fonctionnalités.
==========================

--------------------
Utilisateurs finaux.
--------------------

* Trouve notes étranges :
  Normalise les notes de l'étudiant par rapport à la promo

* Onglet pour Impression pour ne pas submerger le lecteur d'options
  
* https://services.renater.fr/federation/docs/fiches/shibbolisation
  http://lasso.entrouvert.org/
  http://support.onelogin.com/entries/20285277-saml-toolkit-for-python

* Type de colonne Switch (SI)

* Affichage histogramme tronqué.
  Les histogrammes sont à refaire pour simplifier le code et l'affichage
  des cas particuliers (ABI ABJ PPN TNR...)

* Déplacer les infos du titre dans un onglet Info du bloc table

* Non semestrialisation : seul le responsable

* Insérer les lignes qui viennent du serveur aux bons endroits

* Pourcentage d'ABJ pour le résultat d'un calcul en fonction du poids
  des colonnes moyennées.

* Choix de la colonne triée par défaut modifiable interactivement

* Dans le publipostage : mode HTML avec des vrais URL

* IE : Suivi de l'étudiant plus joli.

* Sauvegarde de l'état figé d'une colonne (à faire dans le nouvel interface).

* Dans le suivi : moyenne des notes en plus du rang.

* Dans le suivi : rang pour les moyennes.

* GUI pour la redirection d'une table sur une autre (renommage lien symbolic).

* IE : BILAN TOMUSS : probleme icone+note mal positionné

* RSS étudiant : ajouter + d'info dans le texte et le sujet.

* Mettre UNE table en lecture seulement : Envoyer mail a l'administratif

* Calcul du poids automatique avec '?' : problème de ]1,1[, max, meilleur

* Mettre le ticket en fin d'URL.

* Il n'y a pas de Flux RSS pour les tables ni printemps ni automne. Le faire ?

* Gestion des formations : liste des UE, fusion des UE.
  Le gestionnaire de formation doit pouvoir passer les UE en
  non-semestrialisée.

* Importation de colonnes d'autres tableaux : nécessite calcul serveur

* Interface intuitive pour faire les extractions/resumé ?
  Ceci lié à la gestion des formations.

* Lien sur l'envoi de mail aux étudiants d'une UE sur la page d'accueil.

* Chiffrer colonne avec une clef saisie par l'utilisateur.

* Autoriser n'importe qui à modifier les infos saisies par les autres.
  Comme si tous le monde était responsable ?

* Tip/News de connexion ?	

* Trombinoscope enseignant : voir boite a outil Intranet UCBL

* Wizard création table ?

* Ajouter le téléphone de l'enseignant en plus du mail dans le suivi.

* Détruire les lignes vides dans les tableaux ?

* En cas d'URL non reconnue, afficher un message d'erreur explicite.

* Le filtre "<x" trouve les cases vides ? Faut-il corriger ?

* Vue de la table telle qu'elle était à une date donnée.

* En cas de déconnexion : resynchronisation de la table : il faut
  que le serveur conserve toutes les modifications non envoyées.

---------------
Administrateur.
---------------

* Cleanup d'un tableau sur place : config_table par exemple

* Afficher les lock de tables

* Afficher la tete de update_liste

* Heures sur le graph livestatus

* live_status : pong ne doit pas mettre la date courante si existe pas

* live_status : écarter les noeuds collés.

* live_status : afficher navigateur

* Ajouter les identifiants synonymes

* Interface pour détruire les tables facilement.
  Fusionner avec destruction de tables vides et bizarres.

* Trace des actions TOMUSS stockées dans le navigateur.

* Histogramme : échelle log

* Meta log à distance : stream

* Version ligne de commande qui liste les personnes connectées.

=====================
Problèmes à résoudre.
=====================

* Emploi du temps : manque des UE (TVL)

* Primo entrant dans le bloc note de printemps

* Perte photo quand déconnexion puis reconnexion réseau

* Browser file close : suffisant pour Python 3 ? (page action)

* Arrêter propremement pour ne rien perdre

* %01 %02 ne sont pas supporté par CAS : les enlever...

* La destruction de table quand elle est impossible la fait disparaître
  de la page d'accueil

* Découpler referents_students pour avoir les bon referents par semestre.

* Passer les .css avant les .js

* Le suivi étudiant permet d'avoir des informations non autorisées.

* Rechargement page d'accueil si la recherche étudiant marche pas

* Stats : Impression et sauvegarde sous Chrome

* Version TOMUSS des fichiers statiques indiqué dans l'URL afin que les
  changements de version se passent bien.

* Copier puis drag fait n'importe quoi sur les cases du tableau.
  Sous windows seulement

* Dispense d'assiduité : la destruction d'une DA les détruit toutes.

* unbalanced tree : Tout à refaire, donc dans longtemps.

============================
Problèmes non reproductibles
============================

* Copié à la souris dans une cellule : seulement si vide et seulement FF

* Support du copier/collé dans les INPUT

* L'importation ne met pas à jour l'affichage de temps en temps (Chrome)
  Mode sans sauvegarde ?
  Rafraichissement bloqué si la colonne n'était pas créée ?

* Quand on prend le droit : il faut changer de colonne pour avoir accès
  Difficile à reproduire.


=============================
Améliorations de code source.
=============================

* Faire une procédure de serveur feedback générique

* Tester le nouveau utility.js()

* Scrollbar de chargement jamais visible : l'enlever ?

* Regtest javascript : filtre et double clique

* Faire des plugins pour chaque fonctionnalité coté client, il reste :
	  Les filtres ?
	  Popup_on_red ?

* Méthode javascript pour attr : editable (masters attributes)

* Faire disparaitre UE- EC- car ce n'est pas portable.

* Il faut enlever toute référence aux noms de types dans le JS

* Renommer Inscrit en _Inscrit_, garder la compatibilité pour les vieux.

* Faire le ménage des fonctions deprecated dans les TEMPLATES

* Normaliser les dates début/fin : [x, y] au lieu de "x y"
  Faire 2 attributs au lieu d'un

* Normaliser les dates : nombre de secondes ?

* Safari/Chrome : requetes en double (changement de valeur cellule)

* Interdire stockage mauvais encodage (liste étudiants ou autres)
  Ou passer sur Python3

* Passage à Python 3

* La gestion de _url_ dans StaticFile et de BASE est NULLE........
  Faire proprement StaticFile. Générer des fichier externes.

* Dans bookmark (save options): utiliser des ID plutot que le numéro de colonne

* Faire des objets JavaScript : ***Columns***, Line, Table, Tip...

* Javascript : Préfixer les variables globales par _ ou les supprimer

* Enlever les liens symboliques : trop de problèmes potentiels
  Pas portable sur d'autres systèmes

===============================================
Pourquoi certaines choses ne seront pas faites.
===============================================

* Il faut toujours sauvegarder le new_page même si cela ne sert à rien.

* Dans SUIVI : mettre directement les commentaires visibles
  en effet, l'étudiant n'a pas à les voir par dessus
  l'épaule du référent.

* Passer directement les fichiers python décrivant la table Javascript :
  Non car le serveur a BESOIN de les évaluer de toute façon.

* Importation de colonnes venant du web par le client : IMPOSSIBLE 

* Prendre les mail étudiants de SPIRAL : pas politiquement correcte

* COW (stable) valeur vide ==> comme si rien dans la case (compliqué à faire)
  Et pas sympa si l'on veut vraiment vider la case


