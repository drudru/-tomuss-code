#!/usr/bin/env python
# -*- coding: utf-8 -*-
#    TOMUSS: The Online Multi User Simple Spreadsheet
#    Copyright (C) 2008,2009 Thierry EXCOFFIER, Universite Claude Bernard
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#    Contact: Thierry.EXCOFFIER@bat710.univ-lyon1.fr

import plugin
import utilities
import abj
import configuration
from files import files

css = """
TR#dates TD {
  text-align: center ;
  vertical-align: middle ;
}
TR#ampm TD { text-align: center ; }

TD.weekend { background-color: #FBB; }

TABLE.display_abjs TH { text-align: center ; }
TABLE.display_abjs TD, TABLE.display_da TD { background-color: #EEE ; }
TABLE.display_abjs TH, TABLE.display_abjs TD, TABLE.display_da TD, TABLE.display_da TH { font-size:80%; padding: 1px }

DIV#student_display {
  min-height: 200px ;
}

DIV#student_display IMG {
  height: 200px ;
  text-align: left ;
  float: left ;
}

INPUT#sendabj { 
  width: 20em ;
/*  border: 3px outset #444 ; */
}

SPAN.arrow { 
  color: blue ;
  font-size: 200% ;
}

BODY#BODY P, BODY#BODY H1 { margin: 0px ; }

P.wait { background-color: #8F8 ; }
"""

class Page(object):
    closed = False
    def __init__(self, ticket, the_file):
        self.ticket = ticket
        self.the_file = the_file

pages = []

def keep_alive():
    """Keep connection open"""
    import time
    import socket
    while True:
        time.sleep(configuration.check_down_connections_interval)
        for p in pages:
            if not p.closed:
                try:
                    p.the_file.write(' ')
                    p.the_file.flush()
                except socket.error:
                    p.closed = True
                    p.the_file.close()
                    del p.the_file  # Free file descriptor

utilities.start_new_thread_immortal(keep_alive, ())



def abj_home(server):
    """Display the home page for ABJ management"""
    utilities.warn('Start')
    d = str(files['abj.html']) \
        .replace('YEAR', utilities.js(str(server.the_year))) \
        .replace('SEMESTER', utilities.js(server.the_semester)) \
        .replace('PAGE', str(len(pages))) \
        .replace('TICKET', utilities.js(server.ticket.ticket))
    server.the_file.write(d)
    if configuration.regtest_sync:
        server.the_file.close()
    # XXX : memory leak, some work to remove (page = filedescriptor id)
    # pages = [page for page in pages if not page.the_file.closed]
    pages.append(Page(server.ticket, server.the_file))
    utilities.warn('Done')

    
def abj_alpha_licence(server):
    """Send a CSV file containing all the ABJ and DA information
    for all the students"""
    abj.alpha_html(server.the_file, server.the_year, server.the_semester,
                   ue_name_endswith='L')

def abj_alpha_master(server):
    """Send a CSV file containing all the ABJ and DA information
    for all the students"""
    abj.alpha_html(server.the_file, server.the_year, server.the_semester,
                   ue_name_endswith='M')

def abj_alpha_epu(server):
    """Send a CSV file containing all the ABJ and DA information
    for all the students"""
    abj.alpha_html(server.the_file, server.the_year, server.the_semester,
                   ue_name_startswith='UE-EI')
    
def abj_alpha_author(server):
    """Send a CSV file containing all the ABJ and DA information
    for all the students"""
    abj.alpha_html(server.the_file, server.the_year, server.the_semester,
                   author=server.ticket.user_name)
    
def abj_send_mail(server):
    """When triggered this function send all the mail
    generated by the plugin <a href="#plugin_abjlistmail">listmail</a>."""
    abj.send_mail(server.the_file)
    
def abj_list_mail(server):
    """Generate and display all the message to the UE teachers
    given them the names of the students with ABJ, DA and TT.
    <p>At the end of the page, there is a link to really send the messages</p>
    """
    abj.list_mail(server.the_file, server.the_year, server.the_semester)
    
def abj_action(server):
    """This plugin perform an action on the ABJ and DA list.
    These actions can be adding or removing an ABJ or a DA.
    The client receive a feedback image indicating the status
    of the change.
    """

    path = server.the_path
    if path[0] == 'addabj':
        abj.add_abjs(server.the_year, server.the_semester, server.ticket,
                     server.the_student,
                     '/'.join(path[1:4]) + path[4],
                     '/'.join(path[5:8]) + path[8], path[9])
    elif path[0] == 'add_da':
        abj.add_abjs_da(server.the_year, server.the_semester,
                        server.ticket, server.the_student,
                        path[1], path[2] + '/' + path[3] + '/' + path[4],
                        path[5])
    elif path[0] == 'rem_da':
        abj.rem_abjs_da(server.the_year, server.the_semester,
                        server.ticket, server.the_student, path[1])
    elif path[0] == 'delabj':
        abj.rem_abjs(server.the_year, server.the_semester, server.ticket,
                     server.the_student,
                         '/'.join(path[1:4]) + path[4],
                         '/'.join(path[5:8]) + path[8])
    elif path[0] == 'display':
        pass
    else:
        server.the_file.write(files['bad.png'])
        return
    server.the_file.write(files['ok.png'])

    utilities.warn('%s dans %s' % (server.the_page, repr(pages)))
    page = pages[server.the_page]
    if page.ticket.ticket == server.ticket.ticket and not page.the_file.closed:
        try:
            abj.a_student(page.the_file, server.the_year, server.the_semester,
                          server.ticket, server.the_student, do_close=False)
        except IOError:
            utilities.send_backtrace("IOError")
            
        

def abj_no(server):
    """Display an error message becauses this action is unauthorized"""
    server.the_file.write('BUG: abj_no')


def abj_display(server):
    """Only useful for regtests"""
    abj.a_student(server.the_file, server.the_year, server.the_semester,
                  server.ticket, server.the_student, do_close=True)


plugin.Plugin('abj', '/{Y}/{S}/abj', function=abj_home, abj_master=True,
              link=plugin.Link(
                  text='Modification des ABJ et DA',
                  url="javascript:go('abj')",
                  help="""Permet d'aller sur la page d'édition
                  des justificatifs d'absence et des tiers temps.""",
                  where='abj_master',
                  html_class="safe",
                  ),
              css=css,
              keep_open=True,
              priority = -3,
              )

plugin.Plugin('abjalpha', '/{Y}/{S}/abj/alpha.xls',
              function=abj_alpha_licence, abj_master=True,
              launch_thread = True,
              link=plugin.Link(
                  text='Récapitulatif ABJ+DA des licences',
                  url="javascript:go('abj/alpha.xls')",
                  help="""Liste les justificatifs d'absence ainsi que les
                  dispenses d'assiduité qui ont été saisies pour tous
                  les étudiants de licences.""",
                  where='abj_master',
                  html_class="verysafe",
                  ),
              priority = -3,
              )

plugin.Plugin('abjalphamaster', '/{Y}/{S}/abj/alpha_master.xls',
              function=abj_alpha_master, abj_master=True,
              launch_thread = True,
              link=plugin.Link(
                  text='Récapitulatif ABJ+DA des masters',
                  url="javascript:go('abj/alpha_master.xls')",
                  help="""Liste les justificatifs d'absence ainsi que les
                  dispenses d'assiduité qui ont été saisies pour tous
                  les étudiants de master.""",
                  where='abj_master',
                  html_class="verysafe",
                  ),
              priority = -3,
              )

plugin.Plugin('abjalphaepu', '/{Y}/{S}/abj/alpha_epu.xls',
              function=abj_alpha_epu, abj_master=True,
              launch_thread = True,
              link=plugin.Link(
                  text='Récapitulatif ABJ+DA de l\'EPU',
                  url="javascript:go('abj/alpha_epu.xls')",
                  help="""Liste les justificatifs d'absence ainsi que les
                  dispenses d'assiduité qui ont été saisies pour tous
                  les étudiants de master.""",
                  where='abj_master',
                  html_class="verysafe",
                  ),
              priority = -3,
              )

plugin.Plugin('abjalphaauthor', '/{Y}/{S}/abj/alpha_author.xls',
              function=abj_alpha_author, abj_master=True,
              launch_thread = True,
              link=plugin.Link(
                  text='Récapitulatif ABJ+DA que vous avez saisies',
                  url="javascript:go('abj/alpha_author.xls')",
                  where='abj_master',
                  html_class="verysafe",
                  ),
              priority = -3,
              )

plugin.Plugin('abjlistmail', '/{Y}/{S}/abj/list_mail',
              function=abj_list_mail, abj_master=True,
              launch_thread = True,
              link=plugin.Link(
                  text="Messages aux responsables d'UE de licence",
                  url="javascript:go('abj/list_mail')",
                  help="""Ceci permettra d'envoyer un message à tous les
                  responsables d'UE de licence en leur indiquant
                  la liste des étudiants avec des absences justifiées,
                  des dispenses et les tiers temps.""",
                  where='abj_master',
                  html_class="safe",
                  ),
              priority = -3,
              )

plugin.Plugin('abjhacker', '/{Y}/{S}/abjs', function=abj_no,
              priority = -3,
              )

plugin.Plugin('abjaction', '/{Y}/{S}/abj/{P}/{I}/{*}',
              mimetype = 'image/png',
              function=abj_action, abj_master=True,
              priority = -3,
              )
plugin.Plugin('abjsendmail', '/{Y}/{S}/abj/send_mail',
              function=abj_send_mail, abj_master=True,
              launch_thread = True,
              priority = -3,
              )
plugin.Plugin('abj_display', '/{Y}/{S}/abj/display/{I}',
              function=abj_display, abj_master=True,
              priority = -3,
              )
